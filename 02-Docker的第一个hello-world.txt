docker允许你在容器中运行应用程序，使用docker run命令在容器中运行一个应用程序
topic-01:docker的一个hello world
	docker run ubuntu:15.10 /bin/echo "hello world"
	输出hello world
	
	#参数解析
	a. docker: docker的二进制执行文件
	b. run：与前面的docker组合来运行一个容器
	c. ubuntu:15.10 指定要运行的镜像，docker首先从本地主机上查找镜像是否存在，
	如果不存在，docker就会从镜像
	d. /bin/echo "hello world":在启动的容器里执行的命令

topic-02：运行交互式的容器(我们通过docker的两个容器-i -t，让docker运行的容器实现“对话”的能力)
	docker run -i -t ubuntu:15.10 /bin/bash
	
	#参数解析
	a. -t:在新容器中指定一个伪终端或终端
	b。-i：允许你对容器内的标准输入(STDIN)进行交互
	
	#此时我们已进入一个ubuntu15.10系统的容器，我们尝试在容器中运行命令cat /proc/version 和ls分别查看当前系统的版本信息和当前目录下的文件列表
	我们可以通过exit退出容器

topic-03：启动容器（后台模式）
	a.使用以下命令创建一个以进程方式运行的容器
	docker run -d ubuntu:15.10 /bin/sh -c "while true;do echo hello world;sleep 1; done"
	输入一长串字符，这个叫做容器ID ，对每个容器来说都是唯一的，我们可以通过容器的id来查看对应的容器发生了什么

	b.首先我们确认容器是否有运行，可以通过
	docker ps 
	
	#输出的内容中，CONTAINER ID:容器ID
	NAMES:自动分配的容器名称

	c.查看容器内的标准输出
	docker logs 容器ID #可以查看容器内的输出
	也可以
	docker logs 容器名称

topic-04：停止容器
	docker stop 容器id
	
	也可以用以下命令停止
	docker stop 容器名称

